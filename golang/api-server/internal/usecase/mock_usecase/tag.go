// Code generated by MockGen. DO NOT EDIT.
// Source: tag.go

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	reflect "reflect"

	form "github.com/candy12t/api-server/internal/usecase/form"
	gomock "github.com/golang/mock/gomock"
)

// MockTag is a mock of Tag interface.
type MockTag struct {
	ctrl     *gomock.Controller
	recorder *MockTagMockRecorder
}

// MockTagMockRecorder is the mock recorder for MockTag.
type MockTagMockRecorder struct {
	mock *MockTag
}

// NewMockTag creates a new mock instance.
func NewMockTag(ctrl *gomock.Controller) *MockTag {
	mock := &MockTag{ctrl: ctrl}
	mock.recorder = &MockTagMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTag) EXPECT() *MockTagMockRecorder {
	return m.recorder
}

// CreateTag mocks base method.
func (m *MockTag) CreateTag(arg0 *form.CreateTagParams) (*form.OutputTag, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTag", arg0)
	ret0, _ := ret[0].(*form.OutputTag)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTag indicates an expected call of CreateTag.
func (mr *MockTagMockRecorder) CreateTag(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTag", reflect.TypeOf((*MockTag)(nil).CreateTag), arg0)
}

// DeleteTag mocks base method.
func (m *MockTag) DeleteTag(id int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteTag", id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteTag indicates an expected call of DeleteTag.
func (mr *MockTagMockRecorder) DeleteTag(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTag", reflect.TypeOf((*MockTag)(nil).DeleteTag), id)
}

// GetTag mocks base method.
func (m *MockTag) GetTag(id int) (*form.OutputTag, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTag", id)
	ret0, _ := ret[0].(*form.OutputTag)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTag indicates an expected call of GetTag.
func (mr *MockTagMockRecorder) GetTag(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTag", reflect.TypeOf((*MockTag)(nil).GetTag), id)
}

// GetTags mocks base method.
func (m *MockTag) GetTags() ([]*form.OutputTag, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTags")
	ret0, _ := ret[0].([]*form.OutputTag)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTags indicates an expected call of GetTags.
func (mr *MockTagMockRecorder) GetTags() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTags", reflect.TypeOf((*MockTag)(nil).GetTags))
}

// UpdateTag mocks base method.
func (m *MockTag) UpdateTag(arg0 *form.UpdateTagParams) (*form.OutputTag, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateTag", arg0)
	ret0, _ := ret[0].(*form.OutputTag)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateTag indicates an expected call of UpdateTag.
func (mr *MockTagMockRecorder) UpdateTag(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateTag", reflect.TypeOf((*MockTag)(nil).UpdateTag), arg0)
}
